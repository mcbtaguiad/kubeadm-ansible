# ============================================================================ #
# Author: Mark Taguiad <marktaguiad@tagsdev.xyz>
# ============================================================================ #
- hosts: master
  become: true
  vars:
    HOST_COUNT: "{{ ansible_play_hosts | length }}"
    MASTER_IP: "{{ hostvars['master1']['ansible_default_ipv4']['address'] }}"
  tasks:
  - name: Install Longhorn
    block:
    - name: Add repo Longhorn
      kubernetes.core.helm_repository:
        name: longhorn
        repo_url: "https://charts.longhorn.io"
    - name: Install Longhorn
      kubernetes.core.helm:
        name: longhorn
        chart_ref: longhorn/longhorn
        release_namespace: longhorn-system
        create_namespace: true
        kubeconfig: /etc/kubernetes/admin.conf
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
  # ============================================================================ #
  - name: Label node to be schedulable by Longhorn
    ansible.builtin.shell: |-
      kubectl --kubeconfig /etc/kubernetes/admin.conf \
        label node {{ansible_hostname}} \
        node.longhorn.io/create-default-disk=true
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
  # ============================================================================ #
  - name: Install Metallb
    block:
    - name: Add repo Metallb
      kubernetes.core.helm_repository:
        name: metallb
        repo_url: "https://metallb.github.io/metallb"
    - name: Install
      kubernetes.core.helm:
        name: metallb
        chart_ref: metallb/metallb
        release_namespace: metallb-system
        create_namespace: true
        kubeconfig: /etc/kubernetes/admin.conf
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
  # ============================================================================ #
  - name: Install Argocd
    block:
    - name: Create Argocd NS
      ansible.builtin.shell: |-
        kubectl --kubeconfig /etc/kubernetes/admin.conf create ns argocd 2>/dev/null
      ignore_errors: yes
    - name: Install Argocd
      ansible.builtin.shell: |-
        kubectl apply \
          --kubeconfig /etc/kubernetes/admin.conf \
          -k https://github.com/argoproj/argo-cd/manifests/crds\?ref\=stable \
          -n argocd
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
  # ============================================================================ #
  - name: Install Kubernetes Dashboard
    block:
    - name: Add repo Kubernetes Dashboard
      kubernetes.core.helm_repository:
        name: kubernetes-dashboard
        repo_url: "https://kubernetes.github.io/dashboard/"
    - name: Install Kubernetes Dashboard
      kubernetes.core.helm:
        name: kubernetes-dashboard
        chart_ref: kubernetes-dashboard/kubernetes-dashboard
        release_namespace: kubernetes-dashboard
        create_namespace: true
        kubeconfig: /etc/kubernetes/admin.conf
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
  # ============================================================================ #
  - name: Install Ingress-nginx
    block:
    - name: Add repo Ingress-nginx
      kubernetes.core.helm_repository:
        name: ingress-nginx
        repo_url: "https://kubernetes.github.io/ingress-nginx"
    - name: Install
      kubernetes.core.helm:
        name: ingress-nginx
        chart_ref: ingress-nginx/ingress-nginx
        release_namespace: ingress-nginx
        create_namespace: true
        kubeconfig: /etc/kubernetes/admin.conf
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
# ============================================================================ #
  - name: Install Cert-manager
    block:
    - name: Add repo Cert-manager
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: "https://charts.jetstack.io"
    - name: Install
      kubernetes.core.helm:
        name: cert-manager
        chart_ref: jetstack/cert-manager
        release_namespace: cert-manager
        create_namespace: true
        kubeconfig: /etc/kubernetes/admin.conf
        # values:
        #   installCRDs: true
        #   extraArgs: "{--feature-gates=AdditionalCertificateOutputFormats=true}"
        #   webhook.extraArgs: "{--feature-gates=AdditionalCertificateOutputFormats=true}"
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
  # ============================================================================ #
  - name: Install Metric-server
    block:
    - name: Add repo Metric-server
      kubernetes.core.helm_repository:
        name: metrics-server
        repo_url: "https://kubernetes-sigs.github.io/metrics-server/"
    - name: Install Metric-server
      kubernetes.core.helm:
        name: ingress-nginx
        chart_ref: metrics-server/metrics-server
        release_namespace: kube-system
        create_namespace: true
        kubeconfig: /etc/kubernetes/admin.conf
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
  # ============================================================================ #
  - name: Install kube-state-metrics
    block:
    - name: Add repo kube-state-metrics
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url: "https://prometheus-community.github.io/helm-charts"
    - name: Install kube-state-metrics
      kubernetes.core.helm:
        name: kube-state-metrics
        chart_ref: prometheus-community/kube-state-metrics
        release_namespace: kube-system
        create_namespace: true
        kubeconfig: /etc/kubernetes/admin.conf
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
  # ============================================================================ #
  - name: Fetch kubeconfig file
    ansible.builtin.fetch:
      src: /etc/kubernetes/admin.conf
      dest: ../admin.conf
      flat: yes
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
  # ============================================================================ #
