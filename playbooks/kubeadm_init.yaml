# ============================================================================ #
# Author: Mark Taguiad <marktaguiad@tagsdev.xyz>
# ============================================================================ #
- hosts: all
  become: true
  vars:
    HOST_COUNT: "{{ ansible_play_hosts | length }}"
  tasks:
  - ansible.builtin.import_tasks: ../tasks/k8s_prerequisites.yaml
# ============================================================================ #
  - name: Init first cluster member
    # Run this only on the first node in the inventory
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
    changed_when: false
    register: join_commands
    shell: |-
      kubeadm reset -f &&
      #kubeadm init --v=5 \
      #  --config=/etc/kubernetes/kubeadm_config.yaml \
      #  --upload-certs \
      #  &&
      kubeadm init --v=5 --pod-network-cidr=192.168.0.0/16 --service-cidr=192.169.0.0/16 --upload-certs --control-plane-endpoint {{ ansible_ssh_host }}
      true
# ============================================================================ #
  # - debug: var=join_commands
  - name: Retrieve join commands
    set_fact:
      join_command_control_plane:
        "{{
          ' '.join(join_commands.stdout_lines[-12:-8]).
          replace('\\ ', '').
          replace('\t', '').
          strip()
        }}"
      join_command_worker:
        "{{
          ' '.join(join_commands.stdout_lines[-2:]).
          replace('\\ ', '').
          replace('\t', '').
          strip()
        }}"
    when:
    - join_commands is defined
    - join_commands.stdout_lines is defined
    - join_commands.stdout_lines[-1] != ''
    delegate_to: "{{ item }}"
    with_items: "{{ ansible_play_batch }}"
    run_once: yes
    # when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
# ============================================================================ #
  - debug:
      msg:
        join_command_control_plane: "{{ join_command_control_plane }}"
        join_command_worker: "{{ join_command_worker }}"
    when:
    - join_command_control_plane is defined
    - join_command_worker is defined
    # when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
# ============================================================================ #
  # kubeadm init --v=5 --config=/etc/kubernetes/kubeadm_config.yaml
  - name: Join the other nodes to the cluster
    shell: |-
      kubeadm reset -f &&
      rm -rf ${HOME}/.kube/config &&

      # Creates a cluster with 1 Control-Plane node an the other nodes join as
      # worker nodes in the cluster ( 1 CP + many workers )
      {{ join_command_worker }} &&

      # Multi Control-Plane nodes cluster (all nodes are control-plane nodes)
      # {{ join_command_control_plane }} &&

      true
    when: inventory_hostname != hostvars[inventory_hostname].groups.all[0]
  #   register: join_cp_output
  # - debug: var=join_cp_output
# ============================================================================ #
  - name: Copy kubelet env config
    copy:
      dest: "/var/lib/kubelet/kubeadm-flags.env"
      content: |
        KUBELET_KUBEADM_ARGS="--container-runtime-endpoint=unix:///var/run/containerd/containerd.sock --pod-infra-container-image=registry.k8s.io/pause:3.9 --node-ip {{ ansible_ssh_host }}"
# ============================================================================ #
  - name: Restart service kubelet
    ansible.builtin.service:
      name: kubelet
      state: restarted
# ============================================================================ #
  - name: Install Calico CNI plugin
    command: |-
      kubectl apply \
        --kubeconfig /etc/kubernetes/admin.conf \
        -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/calico.yaml
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
# ============================================================================ #
  - name: Untaint control plane nodes
    shell: |-
      kubectl \
        --kubeconfig /etc/kubernetes/admin.conf \
        taint nodes --all \
        node-role.kubernetes.io/control-plane- \
        || true
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
# ============================================================================ #
  - name: Wait for nodes to become ready
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
    shell: |-
      kubectl \
        --kubeconfig /etc/kubernetes/admin.conf \
        get nodes |
        awk '{print $2}' | tail -n +2 | uniq -c
    register: control_plane_ready
    retries: 10
    delay: 10
    until: control_plane_ready.stdout.strip().split() == [ HOST_COUNT | string , 'Ready']
# ============================================================================ #
  - name: Get cluster info
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
    ansible.builtin.shell: |-
      kubectl \
        --kubeconfig /etc/kubernetes/admin.conf \
        cluster-info
    register: cluster_info
  - debug: var=cluster_info.stdout
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
# ============================================================================ #
  - name: Label all node as worker
    shell: |-
      kubectl \
        --kubeconfig /etc/kubernetes/admin.conf \
        label nodes --all \
        node-role.kubernetes.io/worker=true
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
# ============================================================================ #
  - name: Label nodes (manual label for now)
    shell: |-
      kubectl \
        --kubeconfig /etc/kubernetes/admin.conf  \
        label nodes malaya disk=ssd
      kubectl \
        --kubeconfig /etc/kubernetes/admin.conf  \
        label nodes marilag disk=ssd
      
      kubectl \
        --kubeconfig /etc/kubernetes/admin.conf  \
        label nodes malaya core=4
      kubectl \
        --kubeconfig /etc/kubernetes/admin.conf  \
        label nodes marilag core=3

      kubectl \
        --kubeconfig /etc/kubernetes/admin.conf  \
        label nodes malaya ram=8gb
      kubectl \
        --kubeconfig /etc/kubernetes/admin.conf  \
        label nodes marilag ram=3.5gb
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
# ============================================================================ #
  - name: Fetch kubeconfig file
    ansible.builtin.fetch:
      src: /etc/kubernetes/admin.conf
      dest: ../admin.conf
      flat: yes
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
