# ============================================================================ #
# Author: Mark Taguiad <marktaguiad@tagsdev.xyz>
# ============================================================================ #
- hosts: master
  become: true
  vars:
    HOST_COUNT: "{{ ansible_play_hosts | length }}"
    MASTER_IP: "{{ hostvars['master1']['ansible_default_ipv4']['address'] }}"
  tasks:
# ============================================================================ #
  - name: Install Calico CNI plugin
    kubernetes.core.helm_repository:
      name: projectcalico
      repo_url: "https://docs.tigera.io/calico/charts"
  - name: Deploy calico
    kubernetes.core.helm:
      name: calico
      chart_ref: projectcalico/tigera-operator
      release_namespace: tigera-operator
      create_namespace: true
# ============================================================================ #
  - name: Untaint control plane nodes
    shell: |-
      kubectl \
        --kubeconfig /etc/kubernetes/admin.conf \
        taint nodes --all \
        node-role.kubernetes.io/control-plane- \
        || true
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
# ============================================================================ #
  - name: Wait for nodes to become ready
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
    shell: |-
      kubectl \
        --kubeconfig /etc/kubernetes/admin.conf \
        get nodes |
        awk '{print $2}' | tail -n +2 | uniq -c
    register: control_plane_ready
    retries: 10
    delay: 10
    until: control_plane_ready.stdout.strip().split() == [ HOST_COUNT | string , 'Ready']
# ============================================================================ #
  - name: Get cluster info
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
    ansible.builtin.shell: |-
      kubectl \
        --kubeconfig /etc/kubernetes/admin.conf \
        cluster-info
    register: cluster_info
  - debug: var=cluster_info.stdout
    when: inventory_hostname == hostvars[inventory_hostname].groups.all[0]
# ============================================================================ #